# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master]

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.0.0]
  #       # test-script: ["ci:unit", "ci:e2e", "ci:integration"]
  #       test-script: ["ci:unit", "ci:integration"]
  #       # test-script: ["ci:integration"]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: ${{ matrix.test-script }} with node version ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm run build --if-present
  #   - run: npm run ${{ matrix.test-script }}
  #   - name: Publish Test Report
  #     uses: mikepenz/action-junit-report@v2
  #     with:
  #       report_paths: '**/ci-test-reoprts/*.xml'
      # uses: dorny/test-reporter@v1
      # if: success() || failure()    # run this step even if previous step failed
      # with:
      #   name: Test report           # Name of the check run which will be created
      #   path: ci-test-reoprts/*.xml    # Path to test results
      #   reporter: jest-junit        # Format of test results
  deploy:
    runs-on: ubuntu-latest
    # if: github.event_name == 'pull_request'
    # needs: [tests]
    strategy:
      matrix:
        node-version: [14.16.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    - run: npm --version
    - run: npm ci
    - run: npm run build --if-present
    - run: git config --global user.email "octocat@github.com"
    - run: git config --global user.name "GitHub Actions"
    - run: git remote set-url origin https://nirnaor@github.com/nirnaor/publish-test
    # - run: git checkout master
    - run: |
        echo "registry=http://registry.npmjs.org/" >> .npmrc
        echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Push to master
      if: github.event_name == 'push'
      # run: echo "this is a push to master"
      run: |
        git checkout master
        lerna publish prerelease --dist-tag next --yes
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Push to pull request
      if: github.event_name == 'pull_request'
      # run: echo "PULL REQUEST PUSH"
      run: lerna publish --canary --preid ${{ github.sha }} --yes
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
